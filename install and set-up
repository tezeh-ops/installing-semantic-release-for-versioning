1. Install the semantic-release on your local environment:
    npm install --save-dev semantic-release
    $ npm install semantic-release @semantic-release/git @semantic-release/github -D

2. Create a config file (release.config.js) in the project with the contents below:
     release.config.js
    ====================  then vi into the file and input the below module. it will act as a plugin 

module.exports = {
   branches: "master",                                                    # the branche u want to monotor
   repositoryUrl: "https://github.com/tezeh-ops/terraform-project2",
   plugins: [
     '@semantic-release/commit-analyzer',
     '@semantic-release/release-notes-generator',
     '@semantic-release/git',
     '@semantic-release/github']
}

3. Add your project to the repo:
       git add .

4. Commit your project to the repo using conventional commits. Your commit messages should start with:

    fix:                  ......for a patch version
    feat:                 ......for a minor version
    BREAKING CHANGE:      .......for a major version

4. Add step in the CI workflow:

name: release workflow                                                                       token......   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

on: [workflow_dispatch]

jobs:
  run-shell-command: # the job here is to give permissions to semantic tobe able to write the tags
    permissions:
      contents: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3 # clone a repository
      - name: release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}  # by default this token is already avialable in github we ndon't have to create it again

Or use conditions like:

     name: release workflow
     on:
        workflow_dispatch:


     - name: Create a release
       if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
       run: npx semantic-release
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}

5. After the code is pushed to the repo, trigger this workflow manually to publish and create a release version.
  


- name: Create a release
  if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  run: npx semantic-release
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
- name: Terraform apply
  if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  run: terraform apply -auto-approve

# To understand how versioning works visit  >>>>  https://semver.org/
